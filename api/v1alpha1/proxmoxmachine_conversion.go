/*
Copyright 2023 IONOS Cloud.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package v1alpha1

import (
	apiconversion "k8s.io/apimachinery/pkg/conversion"
	utilconversion "sigs.k8s.io/cluster-api/util/conversion"
	"sigs.k8s.io/controller-runtime/pkg/conversion"

	"github.com/ionos-cloud/cluster-api-provider-proxmox/api/v1alpha2"
)

// ConvertTo converts this ProxmoxMachine to the Hub version (v1alpha2).
func (src *ProxmoxMachine) ConvertTo(dstRaw conversion.Hub) error { //nolint
	dst := dstRaw.(*v1alpha2.ProxmoxMachine)
	if err := Convert_v1alpha1_ProxmoxMachine_To_v1alpha2_ProxmoxMachine(src, dst, nil); err != nil {
		return err
	}

	// Manually restore data.
	restored := &v1alpha2.ProxmoxMachine{}
	if ok, err := utilconversion.UnmarshalData(src, restored); err != nil || !ok {
		return err
	}
	return nil
}

// ConvertFrom converts from the Hub version (v1alpha1) to this version.
func (dst *ProxmoxMachine) ConvertFrom(srcRaw conversion.Hub) error { //nolint
	src := srcRaw.(*v1alpha2.ProxmoxMachine)
	if err := Convert_v1alpha2_ProxmoxMachine_To_v1alpha1_ProxmoxMachine(src, dst, nil); err != nil {
		return err
	}

	// Preserve Hub data on down-conversion.
	if err := utilconversion.MarshalData(src, dst); err != nil {
		return err
	}
	return nil
}

// ConvertTo converts this ProxmoxMachineList to the Hub version (v1alpha1).
func (src *ProxmoxMachineList) ConvertTo(dstRaw conversion.Hub) error { //nolint
	dst := dstRaw.(*v1alpha2.ProxmoxMachineList)
	return Convert_v1alpha1_ProxmoxMachineList_To_v1alpha2_ProxmoxMachineList(src, dst, nil)
}

// ConvertFrom converts from the Hub version (v1alpha2) to this version.
func (dst *ProxmoxMachineList) ConvertFrom(srcRaw conversion.Hub) error { //nolint
	src := srcRaw.(*v1alpha2.ProxmoxMachineList)
	return Convert_v1alpha2_ProxmoxMachineList_To_v1alpha1_ProxmoxMachineList(src, dst, nil)
}

// Convert_v1alpha2_NetworkDevice_To_v1alpha1_NetworkDevice is an autogenerated conversion function.
func Convert_v1alpha2_NetworkDevice_To_v1alpha1_NetworkDevice(in *v1alpha2.NetworkDevice, out *NetworkDevice, s apiconversion.Scope) error {
	return autoConvert_v1alpha2_NetworkDevice_To_v1alpha1_NetworkDevice(in, out, s)
}
